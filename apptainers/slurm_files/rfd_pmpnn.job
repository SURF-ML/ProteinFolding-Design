#!/bin/bash
#
# Slurm submission script for a two-step protein design pipeline:
# 1. RFdiffusion for motif scaffolding.
# 2. ProteinMPNN for sequence design.
#

#SBATCH --job-name=protein_design_pipeline  # Name of the job
#SBATCH --nodes=1                           # Request a single node
#SBATCH --time=00:30:00                     # Maximum execution time: 30 minutes
#SBATCH --partition=gpu_a100                # Request the A100 GPU partition
#SBATCH --gpus=1                            # Request one GPU
#SBATCH --ntasks=1                          # Run a single task
#SBATCH --cpus-per-task=8                   # Allocate 8 CPUs for the task

# --- VARIABLE DEFINITIONS ---
# Define the base project directory
PROJECT_SPACE="./"

# Paths for the RFdiffusion container and input files
RFD_CONTAINER_PATH="$PROJECT_SPACE/rfdiffusion/containers/rfdiffusion-cuda11.8.sif"
# Create an overlay for intermediate outputs
apptainer overlay create --size 128 rfdiffusion_overlay.img

INPUT_PDB_PATH="$PROJECT_SPACE/rfdiffusion/examples/5TPN.pdb"
OUTPUT_PATH="$PROJECT_SPACE/out/"
OVERLAY_FILE="$PROJECT_SPACE/rfdiffusion_overlay.img"

# Path for the ProteinMPNN container
PMPNN_CONTAINER_PATH="$PROJECT_SPACE/proteinmpnn/containers/proteinmpnn-torch2-cuda11.8.sif"

# --- PIPELINE EXECUTION ---

echo "Starting RFdiffusion motif scaffolding..."

# Step 1: Run RFdiffusion using an Apptainer container
# --nv enables NVIDIA GPU support inside the container.
# --overlay provides a writable layer on top of the read-only SIF container.
# -B mounts the current directory ($PWD) to /workspace inside the container.
# --pwd sets the working directory inside the container.
apptainer run --nv \
    --overlay "$OVERLAY_FILE" \
    -B "$PWD:/workspace" \
    --pwd /workspace \
    "$RFD_CONTAINER_PATH" \
    inference.output_prefix="$OUTPUT_PATH" \
    inference.input_pdb="$INPUT_PDB_PATH" \
    inference.num_designs=1 \
    'contigmap.contigs=[10-40/A163-181/10-40]' \
    inference.model_directory_path=/app/RFdiffusion/models

echo "RFdiffusion finished. Starting ProteinMPNN..."

# Step 2: Parse the PDB files generated by RFdiffusion for ProteinMPNN
echo "Parsing PDBs for ProteinMPNN..."
apptainer run --nv \
  --bind "$PWD":"$PWD":rw \
  --app parse "$PMPNN_CONTAINER_PATH" \
  --input_path="$OUTPUT_PATH" \
  --output_path="$OUTPUT_PATH/parsed_pdb_jsonl"


# Step 3: Run ProteinMPNN to design sequences for the scaffolded structures
echo "Running ProteinMPNN for sequence design..."
apptainer run --nv --app run --bind "$PWD":"$PWD":rw "$PMPNN_CONTAINER_PATH" \
    --jsonl_path "$OUTPUT_PATH/parsed_pdb_jsonl" \
    --out_folder "$OUTPUT_PATH" \
    --num_seq_per_target 2 \
    --sampling_temp 0.1 \
    --seed 37 \
    --batch_size 1

# cleanup the overlay
rm rfdiffusion_overlay.img

echo "Pipeline complete."

